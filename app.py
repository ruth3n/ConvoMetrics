import streamlit as st
import json
import calendar
import matplotlib.pyplot as plt
from wordcloud import WordCloud
from datetime import datetime

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–ø–∏—Å–æ–∫ Telegram")

def date_to_day(date):
    date_object = datetime.strptime(date, '%Y-%m-%d').date()
    return calendar.day_name[date_object.weekday()]

st.title('üîç –ê–Ω–∞–ª–∏–∑ —á–∞—Ç–æ–≤ Telegram')

st.write("### –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —á–∞—Ç–∞?")
st.markdown("""
1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –Ω–∞ –ü–ö.
2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —á–∞—Ç.
3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç—Ä–∏ —Ç–æ—á–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É.
4. –í—ã–±–µ—Ä–∏—Ç–µ **"–≠–∫—Å–ø–æ—Ä—Ç —á–∞—Ç–∞"** –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
""")

data = st.file_uploader('üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç–µ JSON-—Ñ–∞–π–ª —á–∞—Ç–∞', type='json')

if data is not None:
    data = json.load(data)
    participants = {}
    words_dict = {}
    total_msgs = len(data['messages'])
    char_count_dict = {}
    word_count_dict = {}
    person_word_dict = {}
    most_used_words = {}
    date_dict = {}
    time_dict = {}
    day_dict = {}

    min_word_length = st.slider("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–ª–æ–≤–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:", 2, 6, 3)

    for msg in data['messages']:
        if msg['type'] == 'message':
            sender = msg['from']
            if sender not in participants:
                participants[sender] = 0
                char_count_dict[sender] = 0
                word_count_dict[sender] = 0
                person_word_dict[sender] = {}
                most_used_words[sender] = {}
                day_dict[sender] = {day: 0 for day in calendar.day_name}
                time_dict[sender] = {str(i): 0 for i in range(24)}
                date_dict[sender] = {}
            
            date = msg['date'][:10]
            hour = msg['date'][11:13]
            day = date_to_day(date)
            
            participants[sender] += 1
            date_dict[sender][date] = date_dict[sender].get(date, 0) + 1
            time_dict[sender][hour] += 1
            day_dict[sender][day] += 1
            
            if isinstance(msg['text'], str):
                words = msg['text'].lower().split()
                char_count_dict[sender] += len(msg['text'].replace(" ", ""))
                word_count_dict[sender] += len(words)
                
                for word in words:
                    if len(word) >= min_word_length:
                        words_dict[word] = words_dict.get(word, 0) + 1
                        person_word_dict[sender][word] = person_word_dict[sender].get(word, 0) + 1
    
    words_dict = dict(sorted(words_dict.items(), key=lambda x: x[1], reverse=True)[:10])
    for sender in person_word_dict:
        most_used_words[sender] = dict(sorted(person_word_dict[sender].items(), key=lambda x: x[1], reverse=True)[:5])
    
    st.header('üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    st.write(f"–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_msgs}")
    st.write(f"–í—Å–µ–≥–æ —Å–ª–æ–≤: {sum(word_count_dict.values())}")
    st.write(f"–í—Å–µ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤: {sum(char_count_dict.values())}")
    
    st.subheader('üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º')
    st.bar_chart(participants)

    st.subheader('üìÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏')
    day_counts = {day: sum(day_dict[user].get(day, 0) for user in day_dict) for day in calendar.day_name}
    st.bar_chart(day_counts)

    st.subheader('‚è∞ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º')
    hour_counts = {str(hour): sum(time_dict[user].get(str(hour), 0) for user in time_dict) for hour in range(24)}
    st.bar_chart(hour_counts)

    st.subheader('üìù –¢–æ–ø-10 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–ª–æ–≤')
    st.bar_chart(words_dict)
    
    st.subheader('‚òÅÔ∏è –û–±–ª–∞–∫–æ —Å–ª–æ–≤')
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate_from_frequencies(words_dict)
    fig, ax = plt.subplots()
    ax.imshow(wordcloud, interpolation='bilinear')
    ax.axis('off')
    st.pyplot(fig)
    
    st.subheader('üìå –°–∞–º—ã–µ —á–∞—Å—Ç—ã–µ —Å–ª–æ–≤–∞ —É –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    for user, words in most_used_words.items():
        st.write(f"**{user}**")
        st.bar_chart(words)
    
    st.write('üîç –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ Telegram-—á–∞—Ç–æ–≤!')
