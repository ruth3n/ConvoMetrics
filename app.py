import streamlit as st
import json
from datetime import datetime
import calendar

st.set_page_config(
    page_title="–ú–µ—Ç—Ä–∏–∫–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∏"
)

def date_to_day(date):
    date_object = datetime.strptime(date, '%Y-%m-%d').date()
    return calendar.day_name[date_object.weekday()]

st.title('–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–≤–æ–∏ —á–∞—Ç—ã: –ò–Ω—Å–∞–π—Ç—ã Telegram —É —Ç–µ–±—è –ø–æ–¥ —Ä—É–∫–æ–π!')

# –ó–∞–≥—Ä—É–∑–∫–∞ JSON-—Ñ–∞–π–ª–∞ —Å —á–∞—Ç–æ–º
data = st.file_uploader('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —á–∞—Ç–∞', type='json')

text = '''–®–∞–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —á–∞—Ç–∞:
    1 - –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –Ω–∞ –ü–ö
    2 - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω—É–∂–Ω—ã–π —á–∞—Ç
    3 - –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç—Ä–∏ —Ç–æ—á–∫–∏ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É
    4 - –í—ã–±–µ—Ä–∏—Ç–µ "–≠–∫—Å–ø–æ—Ä—Ç —á–∞—Ç–∞" –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
'''

st.write(text)

if data is not None:
    data = json.load(data)

    participants = {}  # –ü–æ–¥—Å—á—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    words_dict = {}  # –ü–æ–¥—Å—á—ë—Ç —Å–ª–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    totalmsgs = len(data['messages'])  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π

    min_word_length = 3  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–ª–æ–≤–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

    char_count_dict = {}  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    word_count_dict = {}  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    person_word_Dict = {}  # –ü–æ–¥—Å—á—ë—Ç —Å–ª–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    mostUsedWords = {}  # –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–ª–æ–≤–∞
    date_dict = {}  # –ü–æ–¥—Å—á—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –¥–∞—Ç–∞–º
    time_dict = {}  # –ü–æ–¥—Å—á—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Å–∞–º
    day_dict = {}  # –ü–æ–¥—Å—á—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏

    for i in data['messages']:
        if i['type'] == 'message':
            user = i['from']
            if user not in participants:
                mostUsedWords[user] = {}
                participants[user] = 0
                char_count_dict[user] = 0
                word_count_dict[user] = 0
                person_word_Dict[user] = {}
                day_dict[user] = {day: 0 for day in calendar.day_name}
                time_dict[user] = {}
                date_dict[user] = {}

            date_str = i['date'][0:10]
            hour_str = i['date'][11:13]
            participants[user] += 1
            date_dict[user][date_str] = date_dict[user].get(date_str, 0) + 1
            time_dict[user][hour_str] = time_dict[user].get(hour_str, 0) + 1
            day_dict[user][date_to_day(date_str)] += 1

            if isinstance(i['text'], str):
                words = i['text'].lower().split()
                char_count_dict[user] += len(i['text'].replace(" ", ""))
                word_count_dict[user] += len(words)
                for word in words:
                    if len(word) > min_word_length:
                        words_dict[word] = words_dict.get(word, 0) + 1
                        person_word_Dict[user][word] = person_word_Dict[user].get(word, 0) + 1

    words_dict = dict(sorted(words_dict.items(), key=lambda x: x[1], reverse=True)[:11])
    mostdays = max(len(date_dict[user]) for user in date_dict)
    for user in participants:
        person_word_Dict[user] = dict(sorted(person_word_Dict[user].items(), key=lambda x: x[1], reverse=True))
    for word in words_dict:
        for user in mostUsedWords:
            mostUsedWords[user][word] = person_word_Dict[user].get(word, 0)

    st.header(f'''–û–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏
        –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π - {totalmsgs}
    –í—Å–µ–≥–æ —Å–ª–æ–≤ - {sum(word_count_dict.values())}
    –í—Å–µ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤ - {sum(char_count_dict.values())}
    –í—Å–µ–≥–æ –¥–Ω–µ–π —Å –ø–µ—Ä–µ–ø–∏—Å–∫–æ–π - {mostdays}
    –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - {len(participants)}''')

    col1, col2, col3 = st.columns(3)
    with col1:
        st.subheader('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π')
        st.bar_chart(participants)
    with col2:
        st.subheader('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤')
        st.bar_chart(word_count_dict)
    with col3:
        st.subheader('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤')
        st.bar_chart(char_count_dict)

    st.header('–°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è')
    st.subheader(f'''–°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        –°–ª–æ–≤ - {str(sum(word_count_dict.values())/totalmsgs)[:4]}
    –°–∏–º–≤–æ–ª–æ–≤ - {str(sum(char_count_dict.values())/totalmsgs)[:5]}''')

    avg_words_per_msg = {user: word_count_dict[user]/participants[user] for user in word_count_dict}
    avg_chars_per_msg = {user: char_count_dict[user]/participants[user] for user in char_count_dict}

    col1, col2 = st.columns(2)
    with col1:
        st.subheader('–°–ª–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        st.bar_chart(avg_words_per_msg)
    with col2:
        st.subheader('–°–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        st.bar_chart(avg_chars_per_msg)

    st.subheader(f'''–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –¥–µ–Ω—å
        –°–æ–æ–±—â–µ–Ω–∏–π - {str(totalmsgs/mostdays).split('.')[0]}
    –°–ª–æ–≤ - {str(sum(word_count_dict.values())/mostdays).split('.')[0]}
    –°–∏–º–≤–æ–ª–æ–≤ - {str(sum(char_count_dict.values())/mostdays).split('.')[0]}''')

    col1, col2, col3 = st.columns(3)
    avg_msgs_per_day = {user: participants[user]/mostdays for user in participants}
    avg_words_per_day = {user: word_count_dict[user]/mostdays for user in word_count_dict}
    avg_chars_per_day = {user: char_count_dict[user]/mostdays for user in char_count_dict}
    with col1:
        st.subheader('–°–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å')
        st.bar_chart(avg_msgs_per_day)
    with col2:
        st.subheader('–°–ª–æ–≤ –≤ –¥–µ–Ω—å')
        st.bar_chart(avg_words_per_day)
    with col3:
        st.subheader('–°–∏–º–≤–æ–ª–æ–≤ –≤ –¥–µ–Ω—å')
        st.bar_chart(avg_chars_per_day)

    st.header('–°–∞–º—ã–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–ª–æ–≤–∞')
    st.bar_chart(mostUsedWords)

    st.header('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–∞—Ç–∞–º')
    st.bar_chart(date_dict)

    st.header('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏')
    st.bar_chart(day_dict)

    st.header('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —á–∞—Å–∞–º')
    st.bar_chart(time_dict)

st.write('–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –æ—Ç Meet')
st.write('–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —Å ‚ù§Ô∏è –æ—Ç ruth3n')
st.write('–û—Ü–µ–Ω–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç, –µ—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å! üåü')
